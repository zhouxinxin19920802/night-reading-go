Go调用shell脚本，如何给脚本传参数？
package main

import (
    "fmt"
    "os/exec"
)

func main(){
    command := "/dir_size.sh" //shell脚本的绝对路径
    cmd := exec.Command("/bin/bash", "-c", command)

    output, err := cmd.Output()
    if err != nil {
        fmt.Printf("Execute Shell:%s failed with error:%s", command, err.Error())
        return
    }
    fmt.Printf("Execute Shell:%s finished with output:\n%s", command, string(output))
}
go调用shell脚本很容易，但是如何给脚本传递参数那？
func Command(name string, arg ...string) *Cmd {
	cmd := &Cmd{
		Path: name,
		Args: append([]string{name}, arg...),
	}
	if filepath.Base(name) == name {
		if lp, err := LookPath(name); err != nil {
			cmd.lookPathErr = err
		} else {
			cmd.Path = lp
		}
	}
	return cmd
}
arg是一个字符串数组，其传参就在最后加一个字符串数组即可。
cmd := exec.Command("/bin/bash", "-c", command， 参数1，参数2，参数3]
参考：https://www.jianshu.com/p/dd8a113b02a3
